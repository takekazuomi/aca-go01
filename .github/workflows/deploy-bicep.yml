name: bicep auto deployment for goweb01

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
      - '**'
      - '.github/workflows/deploy-bicep.yml'
    tags:
      - v*

  # Allow mannually trigger 
  workflow_dispatch:      

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      container_image: ${{ steps.build.outputs.container_image }}
      version: ${{ steps.version.outputs.value }}

    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Checkout to the branch
        uses: actions/checkout@v3
        with:
            fetch-depth: 0            

      - name: debug git 
        run: log --graph --all

      - uses: imjasonh/setup-ko@v0.4

      - name: Set version env
        run: echo "VERSION=$(./scripts/get-hashortag.sh)" >> $GITHUB_ENV
      
      - name: Set version output
        id: version
        run: echo "::set-output name=value::$(./scripts/get-hashortag.sh)"

      - name: build
        id: build
        run: echo "::set-output name=container_image::$(ko publish .)"

  deploy:
    runs-on: ubuntu-latest
    environment: deploy
    needs: build
    permissions:
      id-token: write
      contents: read
     
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Deploy to containerapp
        uses: azure/arm-deploy@v1
        with:
            subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
            resourceGroupName: ${{ secrets.AZURE_RESOUCE_GROUP }}
            template: ./deploy/main.bicep
            parameters: >-
                containerAppName=${{ secrets.CONTAINERAPPS_NAME }}
                environmentName=${{ secrets.ENVIRONMENT_NAME }}
                containerImage=${{ needs.build.outputs.container_image }}
                containerPort=8080
                containerRegistry=${{ secrets.REGISTRY_SERVER }}
                containerRegistryUsername=${{ secrets.REGISTRY_USERNAME }}
                containerRegistryPassword=${{ secrets.REGISTRY_PASSWORD }}
                revisionSuffix=${{ needs.build.outputs.version }}
            failOnStdErr: false
            
      - name: Azure CLI logout
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az logout
            az cache purge
            az account clear